[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Thomas Fire SB\n\n\n\nPython\n\n\nMEDS\n\n\nGeospatial\n\n\n\na short catchy description of the blog post\n\n\n\nNaomi Moraes\n\n\nOct 18, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nblog post title\n\n\n\nQuarto\n\n\nMEDS\n\n\nSanFran\n\n\n\na short catchy description of the blog post\n\n\n\nNaomi Moraes\n\n\nOct 18, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site:\nThis is a website I’m making for grad school. I will be posting professional repositories and the like here!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Naomi Moraes",
    "section": "",
    "text": "Having lived in multiple states and abroad, Naomi Moraes has appreciated the global interconnectivity of local environmental issues and solutions, from an early age. Her interest in mitigating climate change impacts led her to complete her undergraduate degree in Economics and Environmental Studies at the University of Michigan, Ann Arbor, where she graduated with a Bachelor of Arts in 2021."
  },
  {
    "objectID": "blog/2024-12-01-thomas-fire-sb/Thomas_Fire_Blog_Post.html",
    "href": "blog/2024-12-01-thomas-fire-sb/Thomas_Fire_Blog_Post.html",
    "title": "nmoraescommit",
    "section": "",
    "text": "# Import Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Read in data\naqi_17 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip', compression = 'zip')\naqi_18 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip', compression = 'zip')\n\n# Concatenate both dataframes\naqi = pd.concat([aqi_17, aqi_18])\n\n# Simplify column names\naqi.columns = (aqi.columns\n                  .str.lower()\n                  .str.replace(' ','_')\n                )\n\n# Create filter Santa Barbara df with dropped columns\naqi_sb = aqi[aqi['county_name'] == 'Santa Barbara']\naqi_sb = aqi_sb.drop(columns = ['state_name','county_name','state_code','county_code'], axis = 1)\n               \n# Change 'date' to datetime and set to index\naqi_sb.date = pd.to_datetime(aqi_sb['date'])\naqi_sb = aqi_sb.set_index('date')\n               \n# Calculate AQI rolling average over 5 days\nrolling_average = aqi_sb['aqi'].rolling('5D').mean()\n               \n# Create column with new variable 'rolling_variable'\naqi_sb['five_day_average'] = rolling_average\n               \n# Create plot with daily AQI and 5-day averages\ndaily_aqi_plot = aqi_sb[['aqi','five_day_average']].plot(title = 'Daily and 5-Day Average AQI in Santa Barbara County',\n                                  xlabel = 'Date',\n                                  ylabel = 'AQI')"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire-sb/Thomas_Fire_Blog_Post.html",
    "href": "posts/2024-12-01-thomas-fire-sb/Thomas_Fire_Blog_Post.html",
    "title": "nmoraescommit",
    "section": "",
    "text": "# Import Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Read in data\naqi_17 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip', compression = 'zip')\naqi_18 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip', compression = 'zip')\n\n# Concatenate both dataframes\naqi = pd.concat([aqi_17, aqi_18])\n\n# Simplify column names\naqi.columns = (aqi.columns\n                  .str.lower()\n                  .str.replace(' ','_')\n                )\n\n# Create filter Santa Barbara df with dropped columns\naqi_sb = aqi[aqi['county_name'] == 'Santa Barbara']\naqi_sb = aqi_sb.drop(columns = ['state_name','county_name','state_code','county_code'], axis = 1)\n               \n# Change 'date' to datetime and set to index\naqi_sb.date = pd.to_datetime(aqi_sb['date'])\naqi_sb = aqi_sb.set_index('date')\n               \n# Calculate AQI rolling average over 5 days\nrolling_average = aqi_sb['aqi'].rolling('5D').mean()\n               \n# Create column with new variable 'rolling_variable'\naqi_sb['five_day_average'] = rolling_average\n               \n# Create plot with daily AQI and 5-day averages\ndaily_aqi_plot = aqi_sb[['aqi','five_day_average']].plot(title = 'Daily and 5-Day Average AQI in Santa Barbara County',\n                                  xlabel = 'Date',\n                                  ylabel = 'AQI')"
  },
  {
    "objectID": "posts/2024-10-18-my-first-post/index.html",
    "href": "posts/2024-10-18-my-first-post/index.html",
    "title": "blog post title",
    "section": "",
    "text": "I’m going to insert a footnote here1"
  },
  {
    "objectID": "posts/2024-10-18-my-first-post/index.html#this-is-my-first-section",
    "href": "posts/2024-10-18-my-first-post/index.html#this-is-my-first-section",
    "title": "blog post title",
    "section": "",
    "text": "I’m going to insert a footnote here1"
  },
  {
    "objectID": "posts/2024-10-18-my-first-post/index.html#this-is-my-second",
    "href": "posts/2024-10-18-my-first-post/index.html#this-is-my-second",
    "title": "blog post title",
    "section": "This is my second",
    "text": "This is my second\nHere’s my next paragraph2\nI’m citing me(online?)"
  },
  {
    "objectID": "posts/2024-10-18-my-first-post/index.html#cite-a-google-article-now",
    "href": "posts/2024-10-18-my-first-post/index.html#cite-a-google-article-now",
    "title": "blog post title",
    "section": "Cite a google article now",
    "text": "Cite a google article now\nHere is more rando text- this is a journal article cite now (Gaynor et al. 2022)"
  },
  {
    "objectID": "posts/2024-10-18-my-first-post/index.html#footnotes",
    "href": "posts/2024-10-18-my-first-post/index.html#footnotes",
    "title": "blog post title",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nHere is a new footnote↩︎\nHere is my second footnote↩︎"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire-sb/index.html",
    "href": "posts/2024-12-01-thomas-fire-sb/index.html",
    "title": "Thomas Fire SB",
    "section": "",
    "text": "I’m going to insert a footnote here1"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire-sb/index.html#this-is-my-first-section",
    "href": "posts/2024-12-01-thomas-fire-sb/index.html#this-is-my-first-section",
    "title": "Thomas Fire SB",
    "section": "",
    "text": "I’m going to insert a footnote here1"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire-sb/index.html#this-is-my-second",
    "href": "posts/2024-12-01-thomas-fire-sb/index.html#this-is-my-second",
    "title": "Thomas Fire SB",
    "section": "This is my second",
    "text": "This is my second\nHere’s my next paragraph2\nI’m citing me[@online]"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire-sb/index.html#cite-a-google-article-now",
    "href": "posts/2024-12-01-thomas-fire-sb/index.html#cite-a-google-article-now",
    "title": "Thomas Fire SB",
    "section": "Cite a google article now",
    "text": "Cite a google article now\nHere is more rando text- this is a journal article cite now [@gaynor2022]"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire-sb/index.html#footnotes",
    "href": "posts/2024-12-01-thomas-fire-sb/index.html#footnotes",
    "title": "Thomas Fire SB",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nHere is a new footnote↩︎\nHere is my second footnote↩︎"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire-sb/Thomas_Fire_Blog_Post-2.html",
    "href": "posts/2024-12-01-thomas-fire-sb/Thomas_Fire_Blog_Post-2.html",
    "title": "Thomas Fire SB",
    "section": "",
    "text": "# Import Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Read in data\naqi_17 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip', compression = 'zip')\naqi_18 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip', compression = 'zip')\n\n# Concatenate both dataframes\naqi = pd.concat([aqi_17, aqi_18])\n\n# Simplify column names\naqi.columns = (aqi.columns\n                  .str.lower()\n                  .str.replace(' ','_')\n                )\n\n# Create filter Santa Barbara df with dropped columns\naqi_sb = aqi[aqi['county_name'] == 'Santa Barbara']\naqi_sb = aqi_sb.drop(columns = ['state_name','county_name','state_code','county_code'], axis = 1)\n               \n# Change 'date' to datetime and set to index\naqi_sb.date = pd.to_datetime(aqi_sb['date'])\naqi_sb = aqi_sb.set_index('date')\n               \n# Calculate AQI rolling average over 5 days\nrolling_average = aqi_sb['aqi'].rolling('5D').mean()\n               \n# Create column with new variable 'rolling_variable'\naqi_sb['five_day_average'] = rolling_average\n               \n# Create plot with daily AQI and 5-day averages\ndaily_aqi_plot = aqi_sb[['aqi','five_day_average']].plot(title = 'Daily and 5-Day Average AQI in Santa Barbara County',\n                                  xlabel = 'Date',\n                                  ylabel = 'AQI')\n\n\n\n\n\n\n\n\nFire perimeter data retrieval and selection\nAuthor: Naomi Moraes\nLink: https://github.com/nmoraescommit/eds220-hw4/tree/main\nAbout\nPurpose: The purpose of this notebook is to explore, clean, and analyze the California fire perimeter shapefile, published by CAL FIRE. This is to obtain the Thomas Fire perimeter boundary for use in “hwk4-task2-false-color-MORAES”. Highlights: Working with this dataset was illuminating in looking at how state agencies store fire data and the aspects state agecies deem important to record, the fact that there is a start and end date to the observations, as well as learning how to store updated shape files. I consider the practice in setting up an entirely new project from scratch to be quite valuable, along with the process of independantly learning to access data for a continous workflow, important. About the data: This dataset was published and maintained by CAL FIRE, but accessed through Data.gov. The statewide fire history geospatial dataset is updated annually from the previous fire season, during spring, from units across the state and cooperating agencies. The first version was released in May 2015 - according the the CalFire site. References: Fire perimeter data: Publisher CAL FIRE. (2024, May 14). State of California - california fire perimeters (all). Catalog. https://catalog.data.gov/dataset/california-fire-perimeters-all-b3436 Assignment Reference and Cleaned Landsat Data Access : Galaz-Garcia, C. (n.d.). Assignment 4. assignment4 – EDS 220 - Working with Environmental Datasets. https://meds-eds-220.github.io/MEDS-eds-220-course/assignments/assignment4.html\nSet-Up In this section we will import the appropriate libraries and data to complete this workbook.\nImport Libraries\n\n# Import libraries\nimport os\nimport pandas as pd\nimport geopandas as gpd\n\n# Display all columns when looking at dataframes\npd.set_option(\"display.max.columns\", None)\n\nImport Data\n\n# Create data filepath\nfp = os.path.join('data','California_Fire_Perimeters_(all).shp')\n\n# Create dataframe for CA fire perimeter shapefile\nca_fire_perimeter = gpd.read_file(fp)\n\nExplore Data In this section we will take a preliminary look at the imported fire perimeter data - in order to understand how to extract the Thomas Fire perimenter data.\n\n# Check dataframe head\nca_fire_perimeter.head(3)\n\n\n\n\n\n\n\n\nYEAR_\nSTATE\nAGENCY\nUNIT_ID\nFIRE_NAME\nINC_NUM\nALARM_DATE\nCONT_DATE\nCAUSE\nC_METHOD\nOBJECTIVE\nGIS_ACRES\nCOMMENTS\nCOMPLEX_NA\nIRWINID\nFIRE_NUM\nCOMPLEX_ID\nDECADES\ngeometry\n\n\n\n\n0\n2023\nCA\nCDF\nSKU\nWHITWORTH\n00004808\n2023-06-17\n2023-06-17\n5\n1\n1\n5.72913\nNaN\nNaN\n{7985848C-0AC2-4BA4-8F0E-29F778652E61}\nNaN\nNaN\n2020\nPOLYGON ((-13682443.000 5091132.739, -13682445...\n\n\n1\n2023\nCA\nLRA\nBTU\nKAISER\n00010225\n2023-06-02\n2023-06-02\n5\n1\n1\n13.60240\nNaN\nNaN\n{43EBCC88-B3AC-48EB-8EF5-417FE0939CCF}\nNaN\nNaN\n2020\nPOLYGON ((-13576727.142 4841226.161, -13576726...\n\n\n2\n2023\nCA\nCDF\nAEU\nJACKSON\n00017640\n2023-07-01\n2023-07-02\n2\n1\n1\n27.81450\nNaN\nNaN\n{B64E1355-BF1D-441A-95D0-BC1FBB93483B}\nNaN\nNaN\n2020\nPOLYGON ((-13459243.000 4621236.000, -13458968...\n\n\n\n\n\n\n\n\n# Check dataframe tail\nca_fire_perimeter.tail(3)\n\n\n\n\n\n\n\n\nYEAR_\nSTATE\nAGENCY\nUNIT_ID\nFIRE_NAME\nINC_NUM\nALARM_DATE\nCONT_DATE\nCAUSE\nC_METHOD\nOBJECTIVE\nGIS_ACRES\nCOMMENTS\nCOMPLEX_NA\nIRWINID\nFIRE_NUM\nCOMPLEX_ID\nDECADES\ngeometry\n\n\n\n\n22258\n0\nCA\nCCO\nMRN\nUKNOWN\nNaN\n1899-12-30\n1899-12-30\n14\n6\n1\n2927.2400\n1917-34(Yr Not Report)MarinCo FireChief Garber...\nNaN\nNaN\nNaN\nNaN\n0\nPOLYGON ((-13658666.186 4605853.097, -13658738...\n\n\n22259\n0\nCA\nCCO\nMRN\nUKNOWN\nNaN\n1899-12-30\n1899-12-30\n14\n6\n1\n62.0127\n1917-34(Yr Not Report)MarinCo FireChief Garber...\nNaN\nNaN\nNaN\nNaN\n0\nPOLYGON ((-13644249.827 4580277.586, -13644243...\n\n\n22260\n0\nCA\nCCO\nMRN\nUKNOWN\nNaN\n1899-12-30\n1899-12-30\n14\n6\n1\n40.0137\n1917-34(Yr Not Report)MarinCo FireChief Garber...\nNaN\nNaN\nNaN\nNaN\n0\nPOLYGON ((-13640708.376 4580839.378, -13640603...\n\n\n\n\n\n\n\n\n# Check columns\nca_fire_perimeter.columns\n\nIndex(['YEAR_', 'STATE', 'AGENCY', 'UNIT_ID', 'FIRE_NAME', 'INC_NUM',\n       'ALARM_DATE', 'CONT_DATE', 'CAUSE', 'C_METHOD', 'OBJECTIVE',\n       'GIS_ACRES', 'COMMENTS', 'COMPLEX_NA', 'IRWINID', 'FIRE_NUM',\n       'COMPLEX_ID', 'DECADES', 'geometry'],\n      dtype='object')\n\n\n\n# Check column datatypes\nca_fire_perimeter.dtypes\n\nYEAR_            int64\nSTATE           object\nAGENCY          object\nUNIT_ID         object\nFIRE_NAME       object\nINC_NUM         object\nALARM_DATE      object\nCONT_DATE       object\nCAUSE            int64\nC_METHOD         int64\nOBJECTIVE        int64\nGIS_ACRES      float64\nCOMMENTS        object\nCOMPLEX_NA      object\nIRWINID         object\nFIRE_NUM        object\nCOMPLEX_ID      object\nDECADES          int64\ngeometry      geometry\ndtype: object\n\n\n\n# Check CRS - and type\nca_fire_perimeter.crs\n\n&lt;Projected CRS: EPSG:3857&gt;\nName: WGS 84 / Pseudo-Mercator\nAxis Info [cartesian]:\n- X[east]: Easting (metre)\n- Y[north]: Northing (metre)\nArea of Use:\n- name: World between 85.06°S and 85.06°N.\n- bounds: (-180.0, -85.06, 180.0, 85.06)\nCoordinate Operation:\n- name: Popular Visualisation Pseudo-Mercator\n- method: Popular Visualisation Pseudo Mercator\nDatum: World Geodetic System 1984 ensemble\n- Ellipsoid: WGS 84\n- Prime Meridian: Greenwich\n\n\nAfter the exploration of the California perimeter shape file, imported into this notebook, I see that is has 22,260 fire perimeter observations with columns for varied descriptive markers including: year, fire name, alarm date, and geometery. I observe that some of the column data types int64 and float64, however, I may want to change the date columns into datetime objects for manipulation. The CRS of this shapefile is a projected coordinate reference system, EPSG: 3857 and is a popular crs for web mapping services.\nClean Data In this section, I will convert the column names to a lower snake case, as well as the date columns to DateTime objects - for ease of future data manipulation.\n\n# Simplify column names by replacing spaces and no capitilization\nca_fire_perimeter.columns = (ca_fire_perimeter.columns\n                  .str.lower()\n                  .str.replace(' ','_')\n                )\n\n# Make dates into DateTime object\nca_fire_perimeter.alarm_date = pd.to_datetime(ca_fire_perimeter.alarm_date)\nca_fire_perimeter.cont_date = pd.to_datetime(ca_fire_perimeter.cont_date)\n\nThomas Fire Boundary Here, I will select for the Thomas Fire Boundary (2017), and save it as a new geospatial file.\n\n# Select Thomas Fire in 2017\nthomas_fire_boundary = ca_fire_perimeter[(ca_fire_perimeter['alarm_date'] &gt; '2016-12-31') & \n                                         (ca_fire_perimeter['alarm_date'] &lt; '2018-01-01') &\n                                         (ca_fire_perimeter['fire_name'] == 'THOMAS')]\n\n\n# View dataframe\nthomas_fire_boundary\n\n\n\n\n\n\n\n\nyear_\nstate\nagency\nunit_id\nfire_name\ninc_num\nalarm_date\ncont_date\ncause\nc_method\nobjective\ngis_acres\ncomments\ncomplex_na\nirwinid\nfire_num\ncomplex_id\ndecades\ngeometry\n\n\n\n\n2654\n2017\nCA\nUSF\nVNC\nTHOMAS\n00003583\n2017-12-04\n2018-01-12\n9\n7\n1\n281791.0\nCONT_DATE based on Inciweb\nNaN\nNaN\nNaN\nNaN\n2010\nMULTIPOLYGON (((-13316089.016 4088553.040, -13...\n\n\n\n\n\n\n\n\n# Save dataframe as geospatial file in /data folder\nthomas_fire_boundary.to_file('data/thomas_fire_boundary.geojson', driver = 'GeoJSON')\n\nFile Shape Explanation I chose to convert the alarm_date and cont_date variables into DateTime objects, and wanted them to retain that data type. As I would need to convert DateTime objects back into strings to save as shapefile, I chose to store the new data frame as a GeoJSON file.\n\n\n\nCitationBibTeX citation:@online{moraes2024,\n  author = {Moraes, Naomi},\n  title = {Thomas {Fire} {SB}},\n  date = {2024-10-18},\n  url = {https://nmoraescommit.github.io/blog/2024-12-01-thomas-fire-sb},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nMoraes, Naomi. 2024. “Thomas Fire SB.” October 18, 2024. https://nmoraescommit.github.io/blog/2024-12-01-thomas-fire-sb."
  }
]